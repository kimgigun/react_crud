{"ast":null,"code":"import react, { useEffect } from 'react';\nimport axios from \"axios\";\nconst MODE_SAVE = 'SAVE';\nconst MODE_DEL = 'DELETE';\nconst MODE_UPDATE = 'UPDATE';\nconst MODE_SELECT = 'SELECT';\nconst MODE_SELECT_ALL = 'SELECT_ALL';\nexport const articleSave = saveData => ({\n  type: MODE_SAVE,\n  saveData: {\n    \"id\": saveData.id,\n    \"count\": saveData.count,\n    \"title\": saveData.title,\n    \"content\": saveData.content,\n    \"date\": saveData.date\n  }\n});\nexport const articleRemove = id => ({\n  type: MODE_DEL,\n  \"id\": id\n});\nexport const articleUpdate = saveData => ({\n  type: MODE_UPDATE,\n  saveData: {\n    \"id\": saveData.id,\n    \"title\": saveData.title,\n    \"content\": saveData.content\n  }\n});\nexport const selectRow = id => ({\n  type: MODE_SELECT,\n  \"id\": id\n});\nexport const selectAll = () => ({\n  type: MODE_SELECT_ALL\n});\nlet initialState = {\n  // let initData = {};\n  // useEffect(() => {\n  // \taxios.get(\"/crud/list.json\").then((res) => {\n  // \t\tinitData.article = res.data.dataList;\n  // \t});\n  //   }, []);\n  //   return initData;\n  articleList: [{\n    id: \"1\",\n    count: \"0\",\n    title: \"안녕하세요\",\n    content: \"안녕 내용\",\n    \"date\": \"2022.02.01\"\n  }]\n};\nexport default function ArticleReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MODE_SAVE:\n      let addItem = {\n        \"id\": action.saveData.id,\n        \"count\": 0,\n        \"title\": action.saveData.title,\n        \"content\": action.saveData.content,\n        \"date\": action.saveData.date\n      };\n      return { ...state,\n        ...state.articleList.push(addItem)\n      };\n\n    case MODE_UPDATE:\n      return { ...state,\n        articleList: state.articleList.map(item => item.id == action.saveData.id ? { ...item,\n          ...action.saveData\n        } : item)\n      };\n\n    case MODE_DEL:\n      return { ...state,\n        articleList: state.articleList.filter(item => {\n          return item.id !== action.id;\n        })\n      };\n\n    case MODE_SELECT:\n      return { ...state,\n        articleList: state.articleList.filter(item => {\n          return item.id === action.id;\n        })\n      };\n\n    case MODE_SELECT_ALL:\n      return {\n        state\n      };\n\n    default:\n      return state;\n  }\n}\n_c = ArticleReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleReducer\");","map":{"version":3,"names":["react","useEffect","axios","MODE_SAVE","MODE_DEL","MODE_UPDATE","MODE_SELECT","MODE_SELECT_ALL","articleSave","saveData","type","id","count","title","content","date","articleRemove","articleUpdate","selectRow","selectAll","initialState","articleList","ArticleReducer","state","action","addItem","push","map","item","filter"],"sources":["C:/Users/kimgi/Favorites/react_crud/src/module/ArticleReducer.js"],"sourcesContent":["\r\nimport react, {useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst MODE_SAVE = 'SAVE';\r\nconst MODE_DEL = 'DELETE';\r\nconst MODE_UPDATE = 'UPDATE';\r\nconst MODE_SELECT = 'SELECT';\r\nconst MODE_SELECT_ALL = 'SELECT_ALL';\r\n\r\nexport const articleSave = (saveData) => (\r\n\t{\r\n\t\ttype : MODE_SAVE,\r\n\t\tsaveData : {\r\n\t\t\t\"id\": saveData.id,\r\n\t\t\t\"count\": saveData.count,\r\n\t\t\t\"title\": saveData.title,\r\n\t\t\t\"content\": saveData.content,\r\n\t\t\t\"date\": saveData.date\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const articleRemove = (id) => (\r\n\t{\r\n\t\ttype : MODE_DEL,\r\n\t    \"id\": id,\r\n\t}\r\n);\r\n\r\nexport const articleUpdate = (saveData) => (\r\n\t{\r\n\t\ttype : MODE_UPDATE,\r\n\t\tsaveData : {\r\n\t\t\t\"id\": saveData.id,\r\n\t\t\t\"title\": saveData.title,\r\n\t\t\t\"content\": saveData.content,\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const selectRow = (id) => (\r\n\t{\r\n\t\ttype : MODE_SELECT,\r\n\t    \"id\": id,\r\n\t}\r\n);\r\n\r\nexport const selectAll = () => (\r\n\t{\r\n\t\ttype : MODE_SELECT_ALL\r\n\t}\r\n);\r\n\r\nlet initialState = {\r\n\t// let initData = {};\r\n\t// useEffect(() => {\r\n\t// \taxios.get(\"/crud/list.json\").then((res) => {\r\n\t// \t\tinitData.article = res.data.dataList;\r\n\t// \t});\r\n\t//   }, []);\r\n\t//   return initData;\r\n\t  articleList : [\r\n\t\t{\r\n\t\t\tid: \"1\",\r\n\t\t\tcount : \"0\",\r\n\t\t\ttitle : \"안녕하세요\",\r\n\t\t\tcontent : \"안녕 내용\",\r\n\t\t\t\"date\" : \"2022.02.01\"\r\n\t\t}\r\n\r\n\t]\r\n}\r\n\r\nexport default function ArticleReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase MODE_SAVE: \r\n\t\tlet addItem = {\r\n\t\t\t\"id\": action.saveData.id,\r\n\t\t\t\"count\": 0,\r\n\t\t\t\"title\": action.saveData.title,\r\n\t\t\t\"content\": action.saveData.content,\r\n\t\t\t\"date\": action.saveData.date\r\n\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...state.articleList.push(addItem)\r\n\t\t\t}\r\n\t\t\r\n\t\tcase MODE_UPDATE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t    articleList : state.articleList.map((item) => item.id == action.saveData.id ? {...item, ...action.saveData } : item)\r\n\t\t\t}\r\n\t\t\r\n\t\tcase MODE_DEL: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t    articleList : state.articleList.filter((item) => {return item.id !== action.id})\r\n\t\t\t}\r\n\t\t\r\n\t\tcase MODE_SELECT : \r\n\t\t\treturn {\r\n\t\t\t    ...state,\r\n\t\t\t\tarticleList : state.articleList.filter((item) => {return item.id === action.id})\r\n\t\t\t}\r\n\t\tcase MODE_SELECT_ALL : \r\n\t\t\treturn {\r\n\t\t\t\tstate\r\n\t\t\t}\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}